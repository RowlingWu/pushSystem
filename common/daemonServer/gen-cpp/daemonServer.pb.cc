// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: daemonServer.proto

#include "daemonServer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace daemon_server {
class ClientRegisterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientRegisterRequest>
      _instance;
} _ClientRegisterRequest_default_instance_;
class ClientRegisterReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientRegisterReply>
      _instance;
} _ClientRegisterReply_default_instance_;
}  // namespace daemon_server
namespace protobuf_daemonServer_2eproto {
static void InitDefaultsClientRegisterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::daemon_server::_ClientRegisterRequest_default_instance_;
    new (ptr) ::daemon_server::ClientRegisterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::daemon_server::ClientRegisterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientRegisterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientRegisterRequest}, {}};

static void InitDefaultsClientRegisterReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::daemon_server::_ClientRegisterReply_default_instance_;
    new (ptr) ::daemon_server::ClientRegisterReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::daemon_server::ClientRegisterReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientRegisterReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientRegisterReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ClientRegisterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientRegisterReply.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::daemon_server::ClientRegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::daemon_server::ClientRegisterRequest, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::daemon_server::ClientRegisterRequest, proc_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::daemon_server::ClientRegisterRequest, group_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::daemon_server::ClientRegisterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::daemon_server::ClientRegisterReply, err_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::daemon_server::ClientRegisterRequest)},
  { 8, -1, sizeof(::daemon_server::ClientRegisterReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::daemon_server::_ClientRegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::daemon_server::_ClientRegisterReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "daemonServer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022daemonServer.proto\022\rdaemon_server\"M\n\025C"
      "lientRegisterRequest\022\017\n\007address\030\001 \001(\t\022\021\n"
      "\tproc_name\030\002 \001(\t\022\020\n\010group_id\030\003 \001(\r\"\"\n\023Cl"
      "ientRegisterReply\022\013\n\003err\030\001 \001(\0052l\n\014Daemon"
      "Server\022\\\n\016ClientRegister\022$.daemon_server"
      ".ClientRegisterRequest\032\".daemon_server.C"
      "lientRegisterReply\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 268);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "daemonServer.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_daemonServer_2eproto
namespace daemon_server {

// ===================================================================

void ClientRegisterRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientRegisterRequest::kAddressFieldNumber;
const int ClientRegisterRequest::kProcNameFieldNumber;
const int ClientRegisterRequest::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientRegisterRequest::ClientRegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_daemonServer_2eproto::scc_info_ClientRegisterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:daemon_server.ClientRegisterRequest)
}
ClientRegisterRequest::ClientRegisterRequest(const ClientRegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  proc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proc_name().size() > 0) {
    proc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proc_name_);
  }
  group_id_ = from.group_id_;
  // @@protoc_insertion_point(copy_constructor:daemon_server.ClientRegisterRequest)
}

void ClientRegisterRequest::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proc_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0u;
}

ClientRegisterRequest::~ClientRegisterRequest() {
  // @@protoc_insertion_point(destructor:daemon_server.ClientRegisterRequest)
  SharedDtor();
}

void ClientRegisterRequest::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proc_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientRegisterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientRegisterRequest::descriptor() {
  ::protobuf_daemonServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_daemonServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientRegisterRequest& ClientRegisterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_daemonServer_2eproto::scc_info_ClientRegisterRequest.base);
  return *internal_default_instance();
}


void ClientRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:daemon_server.ClientRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ClientRegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daemon_server.ClientRegisterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daemon_server.ClientRegisterRequest.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string proc_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proc_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proc_name().data(), static_cast<int>(this->proc_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "daemon_server.ClientRegisterRequest.proc_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daemon_server.ClientRegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daemon_server.ClientRegisterRequest)
  return false;
#undef DO_
}

void ClientRegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daemon_server.ClientRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daemon_server.ClientRegisterRequest.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // string proc_name = 2;
  if (this->proc_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proc_name().data(), static_cast<int>(this->proc_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daemon_server.ClientRegisterRequest.proc_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->proc_name(), output);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:daemon_server.ClientRegisterRequest)
}

::google::protobuf::uint8* ClientRegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:daemon_server.ClientRegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daemon_server.ClientRegisterRequest.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // string proc_name = 2;
  if (this->proc_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proc_name().data(), static_cast<int>(this->proc_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "daemon_server.ClientRegisterRequest.proc_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->proc_name(), target);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->group_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:daemon_server.ClientRegisterRequest)
  return target;
}

size_t ClientRegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:daemon_server.ClientRegisterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string proc_name = 2;
  if (this->proc_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proc_name());
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientRegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daemon_server.ClientRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientRegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientRegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daemon_server.ClientRegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daemon_server.ClientRegisterRequest)
    MergeFrom(*source);
  }
}

void ClientRegisterRequest::MergeFrom(const ClientRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daemon_server.ClientRegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.proc_name().size() > 0) {

    proc_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proc_name_);
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void ClientRegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daemon_server.ClientRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRegisterRequest::CopyFrom(const ClientRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daemon_server.ClientRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientRegisterRequest::IsInitialized() const {
  return true;
}

void ClientRegisterRequest::Swap(ClientRegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientRegisterRequest::InternalSwap(ClientRegisterRequest* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  proc_name_.Swap(&other->proc_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientRegisterRequest::GetMetadata() const {
  protobuf_daemonServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_daemonServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientRegisterReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientRegisterReply::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientRegisterReply::ClientRegisterReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_daemonServer_2eproto::scc_info_ClientRegisterReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:daemon_server.ClientRegisterReply)
}
ClientRegisterReply::ClientRegisterReply(const ClientRegisterReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_ = from.err_;
  // @@protoc_insertion_point(copy_constructor:daemon_server.ClientRegisterReply)
}

void ClientRegisterReply::SharedCtor() {
  err_ = 0;
}

ClientRegisterReply::~ClientRegisterReply() {
  // @@protoc_insertion_point(destructor:daemon_server.ClientRegisterReply)
  SharedDtor();
}

void ClientRegisterReply::SharedDtor() {
}

void ClientRegisterReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientRegisterReply::descriptor() {
  ::protobuf_daemonServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_daemonServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientRegisterReply& ClientRegisterReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_daemonServer_2eproto::scc_info_ClientRegisterReply.base);
  return *internal_default_instance();
}


void ClientRegisterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:daemon_server.ClientRegisterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  err_ = 0;
  _internal_metadata_.Clear();
}

bool ClientRegisterReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:daemon_server.ClientRegisterReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:daemon_server.ClientRegisterReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:daemon_server.ClientRegisterReply)
  return false;
#undef DO_
}

void ClientRegisterReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:daemon_server.ClientRegisterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->err() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:daemon_server.ClientRegisterReply)
}

::google::protobuf::uint8* ClientRegisterReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:daemon_server.ClientRegisterReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 err = 1;
  if (this->err() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:daemon_server.ClientRegisterReply)
  return target;
}

size_t ClientRegisterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:daemon_server.ClientRegisterReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 err = 1;
  if (this->err() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientRegisterReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:daemon_server.ClientRegisterReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientRegisterReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientRegisterReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:daemon_server.ClientRegisterReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:daemon_server.ClientRegisterReply)
    MergeFrom(*source);
  }
}

void ClientRegisterReply::MergeFrom(const ClientRegisterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:daemon_server.ClientRegisterReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.err() != 0) {
    set_err(from.err());
  }
}

void ClientRegisterReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:daemon_server.ClientRegisterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRegisterReply::CopyFrom(const ClientRegisterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:daemon_server.ClientRegisterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientRegisterReply::IsInitialized() const {
  return true;
}

void ClientRegisterReply::Swap(ClientRegisterReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientRegisterReply::InternalSwap(ClientRegisterReply* other) {
  using std::swap;
  swap(err_, other->err_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientRegisterReply::GetMetadata() const {
  protobuf_daemonServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_daemonServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace daemon_server
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::daemon_server::ClientRegisterRequest* Arena::CreateMaybeMessage< ::daemon_server::ClientRegisterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::daemon_server::ClientRegisterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::daemon_server::ClientRegisterReply* Arena::CreateMaybeMessage< ::daemon_server::ClientRegisterReply >(Arena* arena) {
  return Arena::CreateInternal< ::daemon_server::ClientRegisterReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
